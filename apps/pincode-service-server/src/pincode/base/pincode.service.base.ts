/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Pincode as PrismaPincode } from "@prisma/client";

export class PincodeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PincodeCountArgs, "select">): Promise<number> {
    return this.prisma.pincode.count(args);
  }

  async pincodes(args: Prisma.PincodeFindManyArgs): Promise<PrismaPincode[]> {
    return this.prisma.pincode.findMany(args);
  }
  async pincode(
    args: Prisma.PincodeFindUniqueArgs
  ): Promise<PrismaPincode | null> {
    return this.prisma.pincode.findUnique(args);
  }
  async createPincode(args: Prisma.PincodeCreateArgs): Promise<PrismaPincode> {
    return this.prisma.pincode.create(args);
  }
  async updatePincode(args: Prisma.PincodeUpdateArgs): Promise<PrismaPincode> {
    return this.prisma.pincode.update(args);
  }
  async deletePincode(args: Prisma.PincodeDeleteArgs): Promise<PrismaPincode> {
    return this.prisma.pincode.delete(args);
  }
}
